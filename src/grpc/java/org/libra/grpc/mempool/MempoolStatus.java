// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mempool_status.proto

package org.libra.grpc.mempool;

public final class MempoolStatus {
  private MempoolStatus() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code mempool.MempoolAddTransactionStatus}
   */
  public enum MempoolAddTransactionStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Transaction was sent to Mempool
     * </pre>
     *
     * <code>Valid = 0;</code>
     */
    Valid(0),
    /**
     * <pre>
     * The sender does not have enough balance for the transaction.
     * </pre>
     *
     * <code>InsufficientBalance = 1;</code>
     */
    InsufficientBalance(1),
    /**
     * <pre>
     * Sequence number is old, etc.
     * </pre>
     *
     * <code>InvalidSeqNumber = 2;</code>
     */
    InvalidSeqNumber(2),
    /**
     * <pre>
     * Mempool is full (reached max global capacity)
     * </pre>
     *
     * <code>MempoolIsFull = 3;</code>
     */
    MempoolIsFull(3),
    /**
     * <pre>
     * Account reached max capacity per account
     * </pre>
     *
     * <code>TooManyTransactions = 4;</code>
     */
    TooManyTransactions(4),
    /**
     * <pre>
     * Invalid update. Only gas price increase is allowed
     * </pre>
     *
     * <code>InvalidUpdate = 5;</code>
     */
    InvalidUpdate(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Transaction was sent to Mempool
     * </pre>
     *
     * <code>Valid = 0;</code>
     */
    public static final int Valid_VALUE = 0;
    /**
     * <pre>
     * The sender does not have enough balance for the transaction.
     * </pre>
     *
     * <code>InsufficientBalance = 1;</code>
     */
    public static final int InsufficientBalance_VALUE = 1;
    /**
     * <pre>
     * Sequence number is old, etc.
     * </pre>
     *
     * <code>InvalidSeqNumber = 2;</code>
     */
    public static final int InvalidSeqNumber_VALUE = 2;
    /**
     * <pre>
     * Mempool is full (reached max global capacity)
     * </pre>
     *
     * <code>MempoolIsFull = 3;</code>
     */
    public static final int MempoolIsFull_VALUE = 3;
    /**
     * <pre>
     * Account reached max capacity per account
     * </pre>
     *
     * <code>TooManyTransactions = 4;</code>
     */
    public static final int TooManyTransactions_VALUE = 4;
    /**
     * <pre>
     * Invalid update. Only gas price increase is allowed
     * </pre>
     *
     * <code>InvalidUpdate = 5;</code>
     */
    public static final int InvalidUpdate_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MempoolAddTransactionStatus valueOf(int value) {
      return forNumber(value);
    }

    public static MempoolAddTransactionStatus forNumber(int value) {
      switch (value) {
        case 0: return Valid;
        case 1: return InsufficientBalance;
        case 2: return InvalidSeqNumber;
        case 3: return MempoolIsFull;
        case 4: return TooManyTransactions;
        case 5: return InvalidUpdate;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MempoolAddTransactionStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MempoolAddTransactionStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MempoolAddTransactionStatus>() {
            public MempoolAddTransactionStatus findValueByNumber(int number) {
              return MempoolAddTransactionStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.libra.grpc.mempool.MempoolStatus.getDescriptor().getEnumTypes().get(0);
    }

    private static final MempoolAddTransactionStatus[] VALUES = values();

    public static MempoolAddTransactionStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MempoolAddTransactionStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mempool.MempoolAddTransactionStatus)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024mempool_status.proto\022\007mempool*\226\001\n\033Memp" +
      "oolAddTransactionStatus\022\t\n\005Valid\020\000\022\027\n\023In" +
      "sufficientBalance\020\001\022\024\n\020InvalidSeqNumber\020" +
      "\002\022\021\n\rMempoolIsFull\020\003\022\027\n\023TooManyTransacti" +
      "ons\020\004\022\021\n\rInvalidUpdate\020\005B\030\n\026org.libra.gr" +
      "pc.mempoolb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
