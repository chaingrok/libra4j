package com.chaingrok.libra4j.types;


import java.util.HashMap;


import com.chaingrok.libra4j.misc.LCSInterface;
import com.chaingrok.libra4j.misc.LCSProcessor;

public class Code extends ByteArray implements LCSInterface {

	public static final Code CREATE_ACCOUNT = new Code("4c49425241564d0a010007014a00000004000000034e000000060000000d54000000060000000e5a0000000600000005600000002c000000048c0000002000000008ac0000000f00000000000001000200010300020002040200030204020300063c53454c463e0c4c696272614163636f756e74046d61696e126372656174655f6e65775f6163636f756e740000000000000000000000000000000000000000000000000000000000000000000100020004000c000c0113010102");
	public static final Code MINT = new Code("4c49425241564d0a010007014a000000060000000350000000060000000d56000000060000000e5c0000000600000005620000003300000004950000002000000008b50000000f000000000000010002000300010400020002040200030204020300063c53454c463e0c4c696272614163636f756e74094c69627261436f696e046d61696e0f6d696e745f746f5f616464726573730000000000000000000000000000000000000000000000000000000000000000000100020004000c000c0113010102");
	public static final Code PEER_TO_PEER_TRANSFER = new Code("4c49425241564d0a010007014a00000004000000034e000000060000000d54000000060000000e5a0000000600000005600000002900000004890000002000000008a90000000f00000000000001000200010300020002040200030204020300063c53454c463e0c4c696272614163636f756e74046d61696e0f7061795f66726f6d5f73656e6465720000000000000000000000000000000000000000000000000000000000000000000100020004000c000c0113010102");
	public static final Code ROTATE_AUTHENTICATION_KEY = new Code("4c49425241564d0a010007014a00000004000000034e000000060000000d54000000050000000e5900000005000000055e0000003300000004910000002000000008b10000000d0000000000000100020001030002000108000301080300063c53454c463e0c4c696272614163636f756e74046d61696e19726f746174655f61757468656e7469636174696f6e5f6b65790000000000000000000000000000000000000000000000000000000000000000000100010003000c0013010102");
	
	public static final HashMap<String,Code> CODES = new HashMap<String,Code>();
	
	static {
		CODES.put(Program.CREATE_ACCOUNT,Code.CREATE_ACCOUNT);
		CODES.put(Program.MINT,Code.MINT);
		CODES.put(Program.PEER_TO_PEER_TRANSFER,Code.PEER_TO_PEER_TRANSFER);
		CODES.put(Program.ROTATE_AUTHENTICATION_KEY,Code.ROTATE_AUTHENTICATION_KEY);
	}
	
	public Code(String hex) {
		super(hex);
	}
	
	public Code(byte[] bytes) {
		super(bytes);
	}

	@Override
	public LCSProcessor encodeToLCS(LCSProcessor lcsProcessor) {
		if (lcsProcessor != null) {
			lcsProcessor.encode(bytes);
		}
		return lcsProcessor;
	}

}
